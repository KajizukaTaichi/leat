let to_num n := n (\x. x + 1) 0 in
let inc n := ast-replace n (\x. x) (\x. f x) in
let dec n := ast-replace n (\x. f x) (\x. x) in
let church n :=
    if n == 0 then (\f.\x. x)
    else inc (church (n - 1))
in
let add a b :=
    if to_num b == 0 then a
    else add (inc a) (dec b)
in
to_num (add (church 3) (church 2))
